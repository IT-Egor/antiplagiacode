services:
  main:
    build:
      context: .
      dockerfile: main-service/Dockerfile
    image: main-service
    container_name: main-service
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      storage-minio:
        condition: service_healthy
      kafka:
        condition: service_healthy

  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "5433:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=antiplagiacode
      - POSTGRES_USER=antiplagiacode
      - POSTGRES_DB=antiplagiacode
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  storage-minio:
    image: minio/minio
    container_name: storage-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./volumes/minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: [
        "CMD",
        "curl",
        "-f",
        "http://localhost:9000/minio/health/live"
      ]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 10s

  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: broker-kafka
    ports:
      - "9092:9092" # client
      - "29092:29092" # internal
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: '9QstPEiQQzatNAR3KqwTBw'
    volumes:
      - ./volumes/kafka-data:/var/lib/kafka/data
    healthcheck:
      test: [ "CMD-SHELL", "kafka-broker-api-versions --bootstrap-server kafka:29092" ]
      interval: 5s
      timeout: 10s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "9090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local-kafka"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"
      KAFKA_CLUSTERS_0_KRAFTCLUSTERID: "9QstPEiQQzatNAR3KqwTBw"
    depends_on:
      - kafka

  kafka-topics-init:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-topics-init
    depends_on:
      kafka:
        condition: service_healthy
    command: "bash -c \
                'kafka-topics --create --topic file-scan.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092'"
    init: true